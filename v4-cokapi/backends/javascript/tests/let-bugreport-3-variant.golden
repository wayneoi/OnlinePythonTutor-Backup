{ code: '// variant of let-bugreport-3.js\n// test \'...\' thing, which leads to a spurious extra unnamed \'\'\n// variable, which we should ignore\nfunction baseRange(x, y, ...arg) {\n  let start = arg[0];\n  let end = arg[1];\n  let step = arg[2];\n  console.log(step);\n}\n\nbaseRange(10, 20, 4,1,-100);',
  trace: 
   [ { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { baseRange: [ 'REF', 1 ] },
       ordered_globals: [ 'baseRange' ],
       line: 11,
       col: 0,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'baseRange',
             'function baseRange(x, y, ...arg) {\n  let start = arg[0];\n  let end = arg[1];\n  let step = arg[2];\n  console.log(step);\n}',
             null,
             null ] } },
     { stdout: '',
       func_name: 'baseRange',
       stack_to_render: 
        [ { func_name: 'baseRange',
            frame_id: 2,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'baseRange_f2',
            ordered_varnames: 
             [ 'arg',
               'x',
               'y',
               'start (block 1)',
               'end (block 1)',
               'step (block 1)' ],
            encoded_locals: 
             { arg: [ 'REF', 2 ],
               x: 10,
               y: 20,
               'start (block 1)': [ 'JS_SPECIAL_VAL', 'undefined' ],
               'end (block 1)': [ 'JS_SPECIAL_VAL', 'undefined' ],
               'step (block 1)': [ 'JS_SPECIAL_VAL', 'undefined' ] } } ],
       globals: { baseRange: [ 'REF', 1 ] },
       ordered_globals: [ 'baseRange' ],
       line: 5,
       col: 2,
       event: 'call',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'baseRange',
             'function baseRange(x, y, ...arg) {\n  let start = arg[0];\n  let end = arg[1];\n  let step = arg[2];\n  console.log(step);\n}',
             null,
             null ],
          '2': [ 'LIST', 4, 1, -100 ] } },
     { stdout: '',
       func_name: 'baseRange',
       stack_to_render: 
        [ { func_name: 'baseRange',
            frame_id: 2,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'baseRange_f2',
            ordered_varnames: 
             [ 'arg',
               'x',
               'y',
               'start (block 1)',
               'end (block 1)',
               'step (block 1)' ],
            encoded_locals: 
             { arg: [ 'REF', 2 ],
               x: 10,
               y: 20,
               'start (block 1)': 4,
               'end (block 1)': [ 'JS_SPECIAL_VAL', 'undefined' ],
               'step (block 1)': [ 'JS_SPECIAL_VAL', 'undefined' ] } } ],
       globals: { baseRange: [ 'REF', 1 ] },
       ordered_globals: [ 'baseRange' ],
       line: 6,
       col: 2,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'baseRange',
             'function baseRange(x, y, ...arg) {\n  let start = arg[0];\n  let end = arg[1];\n  let step = arg[2];\n  console.log(step);\n}',
             null,
             null ],
          '2': [ 'LIST', 4, 1, -100 ] } },
     { stdout: '',
       func_name: 'baseRange',
       stack_to_render: 
        [ { func_name: 'baseRange',
            frame_id: 2,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'baseRange_f2',
            ordered_varnames: 
             [ 'arg',
               'x',
               'y',
               'start (block 1)',
               'end (block 1)',
               'step (block 1)' ],
            encoded_locals: 
             { arg: [ 'REF', 2 ],
               x: 10,
               y: 20,
               'start (block 1)': 4,
               'end (block 1)': 1,
               'step (block 1)': [ 'JS_SPECIAL_VAL', 'undefined' ] } } ],
       globals: { baseRange: [ 'REF', 1 ] },
       ordered_globals: [ 'baseRange' ],
       line: 7,
       col: 2,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'baseRange',
             'function baseRange(x, y, ...arg) {\n  let start = arg[0];\n  let end = arg[1];\n  let step = arg[2];\n  console.log(step);\n}',
             null,
             null ],
          '2': [ 'LIST', 4, 1, -100 ] } },
     { stdout: '',
       func_name: 'baseRange',
       stack_to_render: 
        [ { func_name: 'baseRange',
            frame_id: 2,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'baseRange_f2',
            ordered_varnames: 
             [ 'arg',
               'x',
               'y',
               'start (block 1)',
               'end (block 1)',
               'step (block 1)' ],
            encoded_locals: 
             { arg: [ 'REF', 2 ],
               x: 10,
               y: 20,
               'start (block 1)': 4,
               'end (block 1)': 1,
               'step (block 1)': -100 } } ],
       globals: { baseRange: [ 'REF', 1 ] },
       ordered_globals: [ 'baseRange' ],
       line: 8,
       col: 2,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'baseRange',
             'function baseRange(x, y, ...arg) {\n  let start = arg[0];\n  let end = arg[1];\n  let step = arg[2];\n  console.log(step);\n}',
             null,
             null ],
          '2': [ 'LIST', 4, 1, -100 ] } },
     { stdout: '-100\n',
       func_name: 'baseRange',
       stack_to_render: 
        [ { func_name: 'baseRange',
            frame_id: 2,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'baseRange_f2',
            ordered_varnames: [ 'arg', 'x', 'y', '__return__' ],
            encoded_locals: 
             { arg: [ 'REF', 2 ],
               x: 10,
               y: 20,
               __return__: [ 'JS_SPECIAL_VAL', 'undefined' ] } } ],
       globals: { baseRange: [ 'REF', 1 ] },
       ordered_globals: [ 'baseRange' ],
       line: 8,
       col: 0,
       event: 'return',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'baseRange',
             'function baseRange(x, y, ...arg) {\n  let start = arg[0];\n  let end = arg[1];\n  let step = arg[2];\n  console.log(step);\n}',
             null,
             null ],
          '2': [ 'LIST', 4, 1, -100 ] } },
     { stdout: '-100\n',
       func_name: '',
       stack_to_render: [],
       globals: { baseRange: [ 'REF', 1 ] },
       ordered_globals: [ 'baseRange' ],
       line: 11,
       col: 28,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'baseRange',
             'function baseRange(x, y, ...arg) {\n  let start = arg[0];\n  let end = arg[1];\n  let step = arg[2];\n  console.log(step);\n}',
             null,
             null ] } } ] }
