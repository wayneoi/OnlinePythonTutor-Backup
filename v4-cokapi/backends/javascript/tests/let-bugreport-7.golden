{ code: '// from https://github.com/pgbovine/OnlinePythonTutor/issues/145\n// "There\'s an extra "cur" block variable created and set to 0 (initial value of i) displayed in the visualizer, which is mysterious!"\nfunction foo() {\n  let cur = 42;\n  for (let i = 0; i < 10; i++)\n    console.log(i);\n}\n\nfoo()',
  trace: 
   [ { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { foo: [ 'REF', 1 ] },
       ordered_globals: [ 'foo' ],
       line: 9,
       col: 0,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  let cur = 42;\n  for (let i = 0; i < 10; i++)\n    console.log(i);\n}',
             null,
             null ] } },
     { stdout: '',
       func_name: 'foo',
       stack_to_render: 
        [ { func_name: 'foo',
            frame_id: 2,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'foo_f2',
            ordered_varnames: [ 'cur' ],
            encoded_locals: { cur: [ 'JS_SPECIAL_VAL', 'undefined' ] } } ],
       globals: { foo: [ 'REF', 1 ] },
       ordered_globals: [ 'foo' ],
       line: 4,
       col: 2,
       event: 'call',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  let cur = 42;\n  for (let i = 0; i < 10; i++)\n    console.log(i);\n}',
             null,
             null ] } },
     { stdout: '',
       func_name: 'foo',
       stack_to_render: 
        [ { func_name: 'foo',
            frame_id: 2,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'foo_f2',
            ordered_varnames: [ 'cur', 'i (block 1)' ],
            encoded_locals: { cur: 42, 'i (block 1)': [ 'JS_SPECIAL_VAL', 'undefined' ] } } ],
       globals: { foo: [ 'REF', 1 ] },
       ordered_globals: [ 'foo' ],
       line: 5,
       col: 7,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  let cur = 42;\n  for (let i = 0; i < 10; i++)\n    console.log(i);\n}',
             null,
             null ] } },
     { stdout: '',
       func_name: 'foo',
       stack_to_render: 
        [ { func_name: 'foo',
            frame_id: 2,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'foo_f2',
            ordered_varnames: [ 'cur', 'i (block 1)', 'i (block 2)' ],
            encoded_locals: { cur: 42, 'i (block 1)': 0, 'i (block 2)': 0 } } ],
       globals: { foo: [ 'REF', 1 ] },
       ordered_globals: [ 'foo' ],
       line: 5,
       col: 20,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  let cur = 42;\n  for (let i = 0; i < 10; i++)\n    console.log(i);\n}',
             null,
             null ] } },
     { stdout: '',
       func_name: 'foo',
       stack_to_render: 
        [ { func_name: 'foo',
            frame_id: 2,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'foo_f2',
            ordered_varnames: [ 'cur', 'i (block 1)', 'i (block 2)' ],
            encoded_locals: { cur: 42, 'i (block 1)': 0, 'i (block 2)': 0 } } ],
       globals: { foo: [ 'REF', 1 ] },
       ordered_globals: [ 'foo' ],
       line: 6,
       col: 4,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  let cur = 42;\n  for (let i = 0; i < 10; i++)\n    console.log(i);\n}',
             null,
             null ] } },
     { stdout: '0\n',
       func_name: 'foo',
       stack_to_render: 
        [ { func_name: 'foo',
            frame_id: 2,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'foo_f2',
            ordered_varnames: [ 'cur', 'i (block 1)', 'i (block 2)' ],
            encoded_locals: { cur: 42, 'i (block 1)': 0, 'i (block 2)': 0 } } ],
       globals: { foo: [ 'REF', 1 ] },
       ordered_globals: [ 'foo' ],
       line: 5,
       col: 27,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  let cur = 42;\n  for (let i = 0; i < 10; i++)\n    console.log(i);\n}',
             null,
             null ] } },
     { stdout: '0\n',
       func_name: 'foo',
       stack_to_render: 
        [ { func_name: 'foo',
            frame_id: 2,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'foo_f2',
            ordered_varnames: [ 'cur', 'i (block 1)', 'i (block 2)' ],
            encoded_locals: { cur: 42, 'i (block 1)': 0, 'i (block 2)': 1 } } ],
       globals: { foo: [ 'REF', 1 ] },
       ordered_globals: [ 'foo' ],
       line: 5,
       col: 20,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  let cur = 42;\n  for (let i = 0; i < 10; i++)\n    console.log(i);\n}',
             null,
             null ] } },
     { stdout: '0\n',
       func_name: 'foo',
       stack_to_render: 
        [ { func_name: 'foo',
            frame_id: 2,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'foo_f2',
            ordered_varnames: [ 'cur', 'i (block 1)', 'i (block 2)' ],
            encoded_locals: { cur: 42, 'i (block 1)': 0, 'i (block 2)': 1 } } ],
       globals: { foo: [ 'REF', 1 ] },
       ordered_globals: [ 'foo' ],
       line: 6,
       col: 4,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  let cur = 42;\n  for (let i = 0; i < 10; i++)\n    console.log(i);\n}',
             null,
             null ] } },
     { stdout: '0\n1\n',
       func_name: 'foo',
       stack_to_render: 
        [ { func_name: 'foo',
            frame_id: 2,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'foo_f2',
            ordered_varnames: [ 'cur', 'i (block 1)', 'i (block 2)' ],
            encoded_locals: { cur: 42, 'i (block 1)': 0, 'i (block 2)': 1 } } ],
       globals: { foo: [ 'REF', 1 ] },
       ordered_globals: [ 'foo' ],
       line: 5,
       col: 27,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  let cur = 42;\n  for (let i = 0; i < 10; i++)\n    console.log(i);\n}',
             null,
             null ] } },
     { stdout: '0\n1\n',
       func_name: 'foo',
       stack_to_render: 
        [ { func_name: 'foo',
            frame_id: 2,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'foo_f2',
            ordered_varnames: [ 'cur', 'i (block 1)', 'i (block 2)' ],
            encoded_locals: { cur: 42, 'i (block 1)': 0, 'i (block 2)': 2 } } ],
       globals: { foo: [ 'REF', 1 ] },
       ordered_globals: [ 'foo' ],
       line: 5,
       col: 20,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  let cur = 42;\n  for (let i = 0; i < 10; i++)\n    console.log(i);\n}',
             null,
             null ] } },
     { stdout: '0\n1\n',
       func_name: 'foo',
       stack_to_render: 
        [ { func_name: 'foo',
            frame_id: 2,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'foo_f2',
            ordered_varnames: [ 'cur', 'i (block 1)', 'i (block 2)' ],
            encoded_locals: { cur: 42, 'i (block 1)': 0, 'i (block 2)': 2 } } ],
       globals: { foo: [ 'REF', 1 ] },
       ordered_globals: [ 'foo' ],
       line: 6,
       col: 4,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  let cur = 42;\n  for (let i = 0; i < 10; i++)\n    console.log(i);\n}',
             null,
             null ] } },
     { stdout: '0\n1\n2\n',
       func_name: 'foo',
       stack_to_render: 
        [ { func_name: 'foo',
            frame_id: 2,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'foo_f2',
            ordered_varnames: [ 'cur', 'i (block 1)', 'i (block 2)' ],
            encoded_locals: { cur: 42, 'i (block 1)': 0, 'i (block 2)': 2 } } ],
       globals: { foo: [ 'REF', 1 ] },
       ordered_globals: [ 'foo' ],
       line: 5,
       col: 27,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  let cur = 42;\n  for (let i = 0; i < 10; i++)\n    console.log(i);\n}',
             null,
             null ] } },
     { stdout: '0\n1\n2\n',
       func_name: 'foo',
       stack_to_render: 
        [ { func_name: 'foo',
            frame_id: 2,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'foo_f2',
            ordered_varnames: [ 'cur', 'i (block 1)', 'i (block 2)' ],
            encoded_locals: { cur: 42, 'i (block 1)': 0, 'i (block 2)': 3 } } ],
       globals: { foo: [ 'REF', 1 ] },
       ordered_globals: [ 'foo' ],
       line: 5,
       col: 20,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  let cur = 42;\n  for (let i = 0; i < 10; i++)\n    console.log(i);\n}',
             null,
             null ] } },
     { stdout: '0\n1\n2\n',
       func_name: 'foo',
       stack_to_render: 
        [ { func_name: 'foo',
            frame_id: 2,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'foo_f2',
            ordered_varnames: [ 'cur', 'i (block 1)', 'i (block 2)' ],
            encoded_locals: { cur: 42, 'i (block 1)': 0, 'i (block 2)': 3 } } ],
       globals: { foo: [ 'REF', 1 ] },
       ordered_globals: [ 'foo' ],
       line: 6,
       col: 4,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  let cur = 42;\n  for (let i = 0; i < 10; i++)\n    console.log(i);\n}',
             null,
             null ] } },
     { stdout: '0\n1\n2\n3\n',
       func_name: 'foo',
       stack_to_render: 
        [ { func_name: 'foo',
            frame_id: 2,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'foo_f2',
            ordered_varnames: [ 'cur', 'i (block 1)', 'i (block 2)' ],
            encoded_locals: { cur: 42, 'i (block 1)': 0, 'i (block 2)': 3 } } ],
       globals: { foo: [ 'REF', 1 ] },
       ordered_globals: [ 'foo' ],
       line: 5,
       col: 27,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  let cur = 42;\n  for (let i = 0; i < 10; i++)\n    console.log(i);\n}',
             null,
             null ] } },
     { stdout: '0\n1\n2\n3\n',
       func_name: 'foo',
       stack_to_render: 
        [ { func_name: 'foo',
            frame_id: 2,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'foo_f2',
            ordered_varnames: [ 'cur', 'i (block 1)', 'i (block 2)' ],
            encoded_locals: { cur: 42, 'i (block 1)': 0, 'i (block 2)': 4 } } ],
       globals: { foo: [ 'REF', 1 ] },
       ordered_globals: [ 'foo' ],
       line: 5,
       col: 20,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  let cur = 42;\n  for (let i = 0; i < 10; i++)\n    console.log(i);\n}',
             null,
             null ] } },
     { stdout: '0\n1\n2\n3\n',
       func_name: 'foo',
       stack_to_render: 
        [ { func_name: 'foo',
            frame_id: 2,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'foo_f2',
            ordered_varnames: [ 'cur', 'i (block 1)', 'i (block 2)' ],
            encoded_locals: { cur: 42, 'i (block 1)': 0, 'i (block 2)': 4 } } ],
       globals: { foo: [ 'REF', 1 ] },
       ordered_globals: [ 'foo' ],
       line: 6,
       col: 4,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  let cur = 42;\n  for (let i = 0; i < 10; i++)\n    console.log(i);\n}',
             null,
             null ] } },
     { stdout: '0\n1\n2\n3\n4\n',
       func_name: 'foo',
       stack_to_render: 
        [ { func_name: 'foo',
            frame_id: 2,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'foo_f2',
            ordered_varnames: [ 'cur', 'i (block 1)', 'i (block 2)' ],
            encoded_locals: { cur: 42, 'i (block 1)': 0, 'i (block 2)': 4 } } ],
       globals: { foo: [ 'REF', 1 ] },
       ordered_globals: [ 'foo' ],
       line: 5,
       col: 27,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  let cur = 42;\n  for (let i = 0; i < 10; i++)\n    console.log(i);\n}',
             null,
             null ] } },
     { stdout: '0\n1\n2\n3\n4\n',
       func_name: 'foo',
       stack_to_render: 
        [ { func_name: 'foo',
            frame_id: 2,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'foo_f2',
            ordered_varnames: [ 'cur', 'i (block 1)', 'i (block 2)' ],
            encoded_locals: { cur: 42, 'i (block 1)': 0, 'i (block 2)': 5 } } ],
       globals: { foo: [ 'REF', 1 ] },
       ordered_globals: [ 'foo' ],
       line: 5,
       col: 20,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  let cur = 42;\n  for (let i = 0; i < 10; i++)\n    console.log(i);\n}',
             null,
             null ] } },
     { stdout: '0\n1\n2\n3\n4\n',
       func_name: 'foo',
       stack_to_render: 
        [ { func_name: 'foo',
            frame_id: 2,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'foo_f2',
            ordered_varnames: [ 'cur', 'i (block 1)', 'i (block 2)' ],
            encoded_locals: { cur: 42, 'i (block 1)': 0, 'i (block 2)': 5 } } ],
       globals: { foo: [ 'REF', 1 ] },
       ordered_globals: [ 'foo' ],
       line: 6,
       col: 4,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  let cur = 42;\n  for (let i = 0; i < 10; i++)\n    console.log(i);\n}',
             null,
             null ] } },
     { stdout: '0\n1\n2\n3\n4\n5\n',
       func_name: 'foo',
       stack_to_render: 
        [ { func_name: 'foo',
            frame_id: 2,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'foo_f2',
            ordered_varnames: [ 'cur', 'i (block 1)', 'i (block 2)' ],
            encoded_locals: { cur: 42, 'i (block 1)': 0, 'i (block 2)': 5 } } ],
       globals: { foo: [ 'REF', 1 ] },
       ordered_globals: [ 'foo' ],
       line: 5,
       col: 27,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  let cur = 42;\n  for (let i = 0; i < 10; i++)\n    console.log(i);\n}',
             null,
             null ] } },
     { stdout: '0\n1\n2\n3\n4\n5\n',
       func_name: 'foo',
       stack_to_render: 
        [ { func_name: 'foo',
            frame_id: 2,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'foo_f2',
            ordered_varnames: [ 'cur', 'i (block 1)', 'i (block 2)' ],
            encoded_locals: { cur: 42, 'i (block 1)': 0, 'i (block 2)': 6 } } ],
       globals: { foo: [ 'REF', 1 ] },
       ordered_globals: [ 'foo' ],
       line: 5,
       col: 20,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  let cur = 42;\n  for (let i = 0; i < 10; i++)\n    console.log(i);\n}',
             null,
             null ] } },
     { stdout: '0\n1\n2\n3\n4\n5\n',
       func_name: 'foo',
       stack_to_render: 
        [ { func_name: 'foo',
            frame_id: 2,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'foo_f2',
            ordered_varnames: [ 'cur', 'i (block 1)', 'i (block 2)' ],
            encoded_locals: { cur: 42, 'i (block 1)': 0, 'i (block 2)': 6 } } ],
       globals: { foo: [ 'REF', 1 ] },
       ordered_globals: [ 'foo' ],
       line: 6,
       col: 4,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  let cur = 42;\n  for (let i = 0; i < 10; i++)\n    console.log(i);\n}',
             null,
             null ] } },
     { stdout: '0\n1\n2\n3\n4\n5\n6\n',
       func_name: 'foo',
       stack_to_render: 
        [ { func_name: 'foo',
            frame_id: 2,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'foo_f2',
            ordered_varnames: [ 'cur', 'i (block 1)', 'i (block 2)' ],
            encoded_locals: { cur: 42, 'i (block 1)': 0, 'i (block 2)': 6 } } ],
       globals: { foo: [ 'REF', 1 ] },
       ordered_globals: [ 'foo' ],
       line: 5,
       col: 27,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  let cur = 42;\n  for (let i = 0; i < 10; i++)\n    console.log(i);\n}',
             null,
             null ] } },
     { stdout: '0\n1\n2\n3\n4\n5\n6\n',
       func_name: 'foo',
       stack_to_render: 
        [ { func_name: 'foo',
            frame_id: 2,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'foo_f2',
            ordered_varnames: [ 'cur', 'i (block 1)', 'i (block 2)' ],
            encoded_locals: { cur: 42, 'i (block 1)': 0, 'i (block 2)': 7 } } ],
       globals: { foo: [ 'REF', 1 ] },
       ordered_globals: [ 'foo' ],
       line: 5,
       col: 20,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  let cur = 42;\n  for (let i = 0; i < 10; i++)\n    console.log(i);\n}',
             null,
             null ] } },
     { stdout: '0\n1\n2\n3\n4\n5\n6\n',
       func_name: 'foo',
       stack_to_render: 
        [ { func_name: 'foo',
            frame_id: 2,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'foo_f2',
            ordered_varnames: [ 'cur', 'i (block 1)', 'i (block 2)' ],
            encoded_locals: { cur: 42, 'i (block 1)': 0, 'i (block 2)': 7 } } ],
       globals: { foo: [ 'REF', 1 ] },
       ordered_globals: [ 'foo' ],
       line: 6,
       col: 4,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  let cur = 42;\n  for (let i = 0; i < 10; i++)\n    console.log(i);\n}',
             null,
             null ] } },
     { stdout: '0\n1\n2\n3\n4\n5\n6\n7\n',
       func_name: 'foo',
       stack_to_render: 
        [ { func_name: 'foo',
            frame_id: 2,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'foo_f2',
            ordered_varnames: [ 'cur', 'i (block 1)', 'i (block 2)' ],
            encoded_locals: { cur: 42, 'i (block 1)': 0, 'i (block 2)': 7 } } ],
       globals: { foo: [ 'REF', 1 ] },
       ordered_globals: [ 'foo' ],
       line: 5,
       col: 27,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  let cur = 42;\n  for (let i = 0; i < 10; i++)\n    console.log(i);\n}',
             null,
             null ] } },
     { stdout: '0\n1\n2\n3\n4\n5\n6\n7\n',
       func_name: 'foo',
       stack_to_render: 
        [ { func_name: 'foo',
            frame_id: 2,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'foo_f2',
            ordered_varnames: [ 'cur', 'i (block 1)', 'i (block 2)' ],
            encoded_locals: { cur: 42, 'i (block 1)': 0, 'i (block 2)': 8 } } ],
       globals: { foo: [ 'REF', 1 ] },
       ordered_globals: [ 'foo' ],
       line: 5,
       col: 20,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  let cur = 42;\n  for (let i = 0; i < 10; i++)\n    console.log(i);\n}',
             null,
             null ] } },
     { stdout: '0\n1\n2\n3\n4\n5\n6\n7\n',
       func_name: 'foo',
       stack_to_render: 
        [ { func_name: 'foo',
            frame_id: 2,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'foo_f2',
            ordered_varnames: [ 'cur', 'i (block 1)', 'i (block 2)' ],
            encoded_locals: { cur: 42, 'i (block 1)': 0, 'i (block 2)': 8 } } ],
       globals: { foo: [ 'REF', 1 ] },
       ordered_globals: [ 'foo' ],
       line: 6,
       col: 4,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  let cur = 42;\n  for (let i = 0; i < 10; i++)\n    console.log(i);\n}',
             null,
             null ] } },
     { stdout: '0\n1\n2\n3\n4\n5\n6\n7\n8\n',
       func_name: 'foo',
       stack_to_render: 
        [ { func_name: 'foo',
            frame_id: 2,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'foo_f2',
            ordered_varnames: [ 'cur', 'i (block 1)', 'i (block 2)' ],
            encoded_locals: { cur: 42, 'i (block 1)': 0, 'i (block 2)': 8 } } ],
       globals: { foo: [ 'REF', 1 ] },
       ordered_globals: [ 'foo' ],
       line: 5,
       col: 27,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  let cur = 42;\n  for (let i = 0; i < 10; i++)\n    console.log(i);\n}',
             null,
             null ] } },
     { stdout: '0\n1\n2\n3\n4\n5\n6\n7\n8\n',
       func_name: 'foo',
       stack_to_render: 
        [ { func_name: 'foo',
            frame_id: 2,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'foo_f2',
            ordered_varnames: [ 'cur', 'i (block 1)', 'i (block 2)' ],
            encoded_locals: { cur: 42, 'i (block 1)': 0, 'i (block 2)': 9 } } ],
       globals: { foo: [ 'REF', 1 ] },
       ordered_globals: [ 'foo' ],
       line: 5,
       col: 20,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  let cur = 42;\n  for (let i = 0; i < 10; i++)\n    console.log(i);\n}',
             null,
             null ] } },
     { stdout: '0\n1\n2\n3\n4\n5\n6\n7\n8\n',
       func_name: 'foo',
       stack_to_render: 
        [ { func_name: 'foo',
            frame_id: 2,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'foo_f2',
            ordered_varnames: [ 'cur', 'i (block 1)', 'i (block 2)' ],
            encoded_locals: { cur: 42, 'i (block 1)': 0, 'i (block 2)': 9 } } ],
       globals: { foo: [ 'REF', 1 ] },
       ordered_globals: [ 'foo' ],
       line: 6,
       col: 4,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  let cur = 42;\n  for (let i = 0; i < 10; i++)\n    console.log(i);\n}',
             null,
             null ] } },
     { stdout: '0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n',
       func_name: 'foo',
       stack_to_render: 
        [ { func_name: 'foo',
            frame_id: 2,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'foo_f2',
            ordered_varnames: [ 'cur', 'i (block 1)', 'i (block 2)' ],
            encoded_locals: { cur: 42, 'i (block 1)': 0, 'i (block 2)': 9 } } ],
       globals: { foo: [ 'REF', 1 ] },
       ordered_globals: [ 'foo' ],
       line: 5,
       col: 27,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  let cur = 42;\n  for (let i = 0; i < 10; i++)\n    console.log(i);\n}',
             null,
             null ] } },
     { stdout: '0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n',
       func_name: 'foo',
       stack_to_render: 
        [ { func_name: 'foo',
            frame_id: 2,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'foo_f2',
            ordered_varnames: [ 'cur', 'i (block 1)', 'i (block 2)' ],
            encoded_locals: { cur: 42, 'i (block 1)': 0, 'i (block 2)': 10 } } ],
       globals: { foo: [ 'REF', 1 ] },
       ordered_globals: [ 'foo' ],
       line: 5,
       col: 20,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  let cur = 42;\n  for (let i = 0; i < 10; i++)\n    console.log(i);\n}',
             null,
             null ] } },
     { stdout: '0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n',
       func_name: 'foo',
       stack_to_render: 
        [ { func_name: 'foo',
            frame_id: 2,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'foo_f2',
            ordered_varnames: [ 'cur', '__return__' ],
            encoded_locals: { cur: 42, __return__: [ 'JS_SPECIAL_VAL', 'undefined' ] } } ],
       globals: { foo: [ 'REF', 1 ] },
       ordered_globals: [ 'foo' ],
       line: 5,
       col: 0,
       event: 'return',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  let cur = 42;\n  for (let i = 0; i < 10; i++)\n    console.log(i);\n}',
             null,
             null ] } },
     { stdout: '0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n',
       func_name: '',
       stack_to_render: [],
       globals: { foo: [ 'REF', 1 ] },
       ordered_globals: [ 'foo' ],
       line: 9,
       col: 5,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  let cur = 42;\n  for (let i = 0; i < 10; i++)\n    console.log(i);\n}',
             null,
             null ] } } ] }
