{ code: '// from https://github.com/pgbovine/OnlinePythonTutor/issues/264\n// \'e\' is duplicated in the loop\nconst x = [\'hello\', \'world\', \'goodbye\'];    \nfor (const e of x) {    \n  console.log(\'ELEMENT: \' + e);\n}',
  trace: 
   [ { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: {},
       ordered_globals: [],
       line: 3,
       col: 0,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { x: [ 'REF', 1 ],
          'e (block 1)': [ 'JS_SPECIAL_VAL', 'undefined' ] },
       ordered_globals: [ 'x', 'e (block 1)' ],
       line: 4,
       col: 16,
       event: 'step_line',
       heap: { '1': [ 'LIST', 'hello', 'world', 'goodbye' ] } },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { x: [ 'REF', 1 ],
          'e (block 1)': [ 'JS_SPECIAL_VAL', 'undefined' ] },
       ordered_globals: [ 'x', 'e (block 1)' ],
       line: 4,
       col: 14,
       event: 'step_line',
       heap: { '1': [ 'LIST', 'hello', 'world', 'goodbye' ] } },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { x: [ 'REF', 1 ],
          'e (block 1)': [ 'JS_SPECIAL_VAL', 'undefined' ] },
       ordered_globals: [ 'x', 'e (block 1)' ],
       line: 4,
       col: 15,
       event: 'step_line',
       heap: { '1': [ 'LIST', 'hello', 'world', 'goodbye' ] } },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { x: [ 'REF', 1 ],
          'e (block 1)': [ 'JS_SPECIAL_VAL', 'undefined' ],
          'e (block 2)': 'hello' },
       ordered_globals: [ 'x', 'e (block 1)', 'e (block 2)' ],
       line: 5,
       col: 2,
       event: 'step_line',
       heap: { '1': [ 'LIST', 'hello', 'world', 'goodbye' ] } },
     { stdout: 'ELEMENT: hello\n',
       func_name: '',
       stack_to_render: [],
       globals: 
        { x: [ 'REF', 1 ],
          'e (block 1)': [ 'JS_SPECIAL_VAL', 'undefined' ] },
       ordered_globals: [ 'x', 'e (block 1)' ],
       line: 4,
       col: 15,
       event: 'step_line',
       heap: { '1': [ 'LIST', 'hello', 'world', 'goodbye' ] } },
     { stdout: 'ELEMENT: hello\n',
       func_name: '',
       stack_to_render: [],
       globals: 
        { x: [ 'REF', 1 ],
          'e (block 1)': [ 'JS_SPECIAL_VAL', 'undefined' ],
          'e (block 2)': 'world' },
       ordered_globals: [ 'x', 'e (block 1)', 'e (block 2)' ],
       line: 5,
       col: 2,
       event: 'step_line',
       heap: { '1': [ 'LIST', 'hello', 'world', 'goodbye' ] } },
     { stdout: 'ELEMENT: hello\nELEMENT: world\n',
       func_name: '',
       stack_to_render: [],
       globals: 
        { x: [ 'REF', 1 ],
          'e (block 1)': [ 'JS_SPECIAL_VAL', 'undefined' ] },
       ordered_globals: [ 'x', 'e (block 1)' ],
       line: 4,
       col: 15,
       event: 'step_line',
       heap: { '1': [ 'LIST', 'hello', 'world', 'goodbye' ] } },
     { stdout: 'ELEMENT: hello\nELEMENT: world\n',
       func_name: '',
       stack_to_render: [],
       globals: 
        { x: [ 'REF', 1 ],
          'e (block 1)': [ 'JS_SPECIAL_VAL', 'undefined' ],
          'e (block 2)': 'goodbye' },
       ordered_globals: [ 'x', 'e (block 1)', 'e (block 2)' ],
       line: 5,
       col: 2,
       event: 'step_line',
       heap: { '1': [ 'LIST', 'hello', 'world', 'goodbye' ] } },
     { stdout: 'ELEMENT: hello\nELEMENT: world\nELEMENT: goodbye\n',
       func_name: '',
       stack_to_render: [],
       globals: 
        { x: [ 'REF', 1 ],
          'e (block 1)': [ 'JS_SPECIAL_VAL', 'undefined' ] },
       ordered_globals: [ 'x', 'e (block 1)' ],
       line: 4,
       col: 15,
       event: 'step_line',
       heap: { '1': [ 'LIST', 'hello', 'world', 'goodbye' ] } },
     { stdout: 'ELEMENT: hello\nELEMENT: world\nELEMENT: goodbye\n',
       func_name: '',
       stack_to_render: [],
       globals: { x: [ 'REF', 1 ] },
       ordered_globals: [ 'x' ],
       line: 6,
       col: 1,
       event: 'step_line',
       heap: { '1': [ 'LIST', 'hello', 'world', 'goodbye' ] } } ] }
